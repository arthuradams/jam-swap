ngResource **

making everything in the javascript tag

format.json{ render json: Category.all } in all controllers?

**

.module("posts", ["ngResource"])
.controller("post_controller",
 PostController);

 PostController.$inject= [$resource];

 function
PostController($resource){
var vm = this;
var Post = $resource("/posts/:id.json"),{}
          update;{method: "PUT"}
});
angular
             automatically know what this is :id is aa variabl
ANGULAR $resource like inherit active record base
tells /post.. which url to load from






Delete require tree directory tree any file in java directory will get
included when rails precompiles things - when rails pulls all the
files together and pushes them intogether in one file
we don't want products.js to be included in the main javascript
that shows up on every page.

same thing in css - done already.

only in products.js? otherwise js wont validate
//=require angular
//= require angular-resource

when rails precompiles this it will automatically
figure out where angular and angular-resource are telling
should be in the vendor folder and it will
automatically include them when it precompiles actually
instruction to rails to include them when precompiles.

same thing in stylesheet:
/*
*= require bootstrap
/*

config/initializers/assets.rb

precompile additional assets when rails starts
will only precompile application.js application.css
need to say all js files - see done should we double check?
also need css files

have in users index.html - how many files need this????
<%= javascript_include_tag "users", property: "stylesheet" %>

property: 'stylesheet"need for validation cuz thinks like link tags not allowed

robin also put
<% stylesheet_link_tab "products.css" %>

***************************

he had his json file in products.dta.json in db then in seeds:
data = JSON.parse(File.read("db/products_data.json"))
Product.destroy_all
Product.create!(data) - creates one thing for each item
                        in array.
*****************

connect to data base.

go to posts.controller - send data user wants if wants
   JSON send json... otherwise send html.

have it in categories controller do we need it
in all controllers??????????????????????????????????

def index
  respond_to do |format|
    format.html           so when something asks format
                         html will do defalt action format
                         index group is so index.html
                        so what is in url will expect html
    format.json{ render json: Category.all }
  end
end

******************************

NOW LOAD DATA

products.js

load ng resource in index.js - don't need in
 other controllers??

 so set up like this:

 .module("posts", ["ngResource"])
 .controller("post_controller",
  PostController);

  PostController.$inject= [$resource];

  function
PostController($resource){
var vm = this;
var Post = $resource("/posts/:id.json"),{}
           update;{method: "PUT"}
});
 angular
              automatically know what this is :id is aa variabl
ANGULAR $resource like inherit active record base
tells /post.. which url to load from

****************
product.js
vm.product now becomes product.query()
    angular thing it will query database and get all products

*****************
I THINK THIS WAS DONE JUST LIKE example


need costs to show up can't to .to_fixed check!!!!!!!
once get all data back with query run
function

vm.data = Product.query(function(response){
  vm.data.forEach(function(product){
     product.cost=parseFloat(product.cost):
  });
})
*****************

now set up destroy - first go to prodcuts controller

var product =
var product = vm.data{product_index].}
vm.destroy - function(product_index){
  Product.remove({id:productid})
} function(response){
vm.data.splice(product_index, 1);
});
}

anytime see call back in ng resource only fir call pack when not fired.
klllllllllllllllllllll
post_controller.rb
def destroy
  Post.destroy(params[:id])
  render json: {success: true}, status: :ok
end


put remove in destoy function

post_controller.rb

def destory
 Post.destroy(param[:id])
 render json: {success:true},status: - sends 200 status controller
 :ok
 end

 make sure that ApplicationController
  does not have protect_from_forgery with: :exception
   only will let you read comment it Out
THIS WAS DONE

*********************
delete button sends an ajax request to post_
controller to delete

**************************************

can varify where runnning rails s

********************************
